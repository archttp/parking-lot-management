<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cf.ucenter.dao.mapper.CfStaffMapper" >
  <resultMap id="BaseResultMap" type="com.cf.ucenter.domain.CfStaff" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="employer_id" property="employerId" jdbcType="VARCHAR" />
    <result column="staff_id" property="staffId" jdbcType="VARCHAR" />
    <result column="note" property="note" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, employer_id, staff_id, note, create_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.cf.ucenter.domain.CfStaffExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cf_staff
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from cf_staff
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from cf_staff
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.cf.ucenter.domain.CfStaffExample" >
    delete from cf_staff
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cf.ucenter.domain.CfStaff" >
    insert into cf_staff (id, employer_id, staff_id, 
      note, create_time)
    values (#{id,jdbcType=VARCHAR}, #{employerId,jdbcType=VARCHAR}, #{staffId,jdbcType=VARCHAR}, 
      #{note,jdbcType=VARCHAR}, #{createTime,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.cf.ucenter.domain.CfStaff" >
    insert into cf_staff
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="employerId != null" >
        employer_id,
      </if>
      <if test="staffId != null" >
        staff_id,
      </if>
      <if test="note != null" >
        note,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="employerId != null" >
        #{employerId,jdbcType=VARCHAR},
      </if>
      <if test="staffId != null" >
        #{staffId,jdbcType=VARCHAR},
      </if>
      <if test="note != null" >
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cf.ucenter.domain.CfStaffExample" resultType="java.lang.Integer" >
    select count(*) from cf_staff
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update cf_staff
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.employerId != null" >
        employer_id = #{record.employerId,jdbcType=VARCHAR},
      </if>
      <if test="record.staffId != null" >
        staff_id = #{record.staffId,jdbcType=VARCHAR},
      </if>
      <if test="record.note != null" >
        note = #{record.note,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update cf_staff
    set id = #{record.id,jdbcType=VARCHAR},
      employer_id = #{record.employerId,jdbcType=VARCHAR},
      staff_id = #{record.staffId,jdbcType=VARCHAR},
      note = #{record.note,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cf.ucenter.domain.CfStaff" >
    update cf_staff
    <set >
      <if test="employerId != null" >
        employer_id = #{employerId,jdbcType=VARCHAR},
      </if>
      <if test="staffId != null" >
        staff_id = #{staffId,jdbcType=VARCHAR},
      </if>
      <if test="note != null" >
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cf.ucenter.domain.CfStaff" >
    update cf_staff
    set employer_id = #{employerId,jdbcType=VARCHAR},
      staff_id = #{staffId,jdbcType=VARCHAR},
      note = #{note,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=BIGINT}
    where id = #{id,jdbcType=VARCHAR}
  </update>




  <resultMap id="ContainNameResultMap" type="com.cf.ucenter.domain.CfStaff" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="employer_id" property="employerId" jdbcType="VARCHAR" />
    <result column="staff_id" property="staffId" jdbcType="VARCHAR" />
    <result column="note" property="note" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="BIGINT" />
    <result column="staff_name" property="staffName" jdbcType="VARCHAR" />
    <result column="staff_avatar" property="staffAvatar" jdbcType="VARCHAR" />
    <result column="same_day_coupon_count" property="sameDayCouponCount" jdbcType="DECIMAL" />
  </resultMap>

  <select id="selectByQuery" parameterType="com.cf.ucenter.request.CfStaffQuery" resultMap="ContainNameResultMap">
    select stf.*,u.user_name staff_name,u.avatar staff_avatar from cf_staff stf 
    left join cf_user u on(stf.staff_id=u.id)
    <trim prefix="where " prefixOverrides="and" >
      <if test="id != null and id != ''" >
        and stf.id=#{id,jdbcType=VARCHAR}
      </if>
      <if test="employerId != null and employerId != ''" >
        and stf.employer_id=#{employerId,jdbcType=VARCHAR}
      </if>
      <if test="staffId != null and staffId != ''" >
        and stf.staff_id=#{staffId,jdbcType=VARCHAR}
      </if>
      <if test="minCreateTime != null" >
        and stf.create_time <![CDATA[ >= ]]> #{minCreateTime,jdbcType=BIGINT}
      </if>
      <if test="maxCreateTime != null" >
        and stf.create_time <![CDATA[ <= ]]> #{maxCreateTime,jdbcType=BIGINT}
      </if>
    </trim>
    <if test="orderBy != null and orderBy != ''" >
      order by #{orderBy,jdbcType=VARCHAR}
    </if>
    <if test="page != null and size != null" >
      limit ${(page-1)*size},${size}
    </if>
  </select>

  <select id="selectByQueryContainCouponCount" parameterType="com.cf.ucenter.request.CfStaffQuery" resultMap="ContainNameResultMap">
    select stf.*,u.user_name staff_name,u.avatar staff_avatar,case when scl.same_day_coupon_count then scl.same_day_coupon_count else 0.00 end same_day_coupon_count from cf_staff stf
    left join (
     select id,staff_id,sum(denomination) same_day_coupon_count from cf_staff_coupon_log
     where
     create_time <![CDATA[ >= ]]> #{countStartTime,jdbcType=BIGINT} and create_time <![CDATA[ <= ]]> #{countEndTime,jdbcType=BIGINT}
    <if test="employerId != null and employerId != ''" >
     and staff_id in(select id from cf_staff where employer_id = #{employerId,jdbcType=VARCHAR})
    </if>
    group by id
    ) scl on(stf.staff_id=scl.staff_id)
    left join cf_user u on(stf.staff_id=u.id)
    <trim prefix="where " prefixOverrides="and">
      <if test="id != null and id != ''" >
        and stf.id=#{id,jdbcType=VARCHAR}
      </if>
      <if test="employerId != null and employerId != ''" >
        and stf.employer_id=#{employerId,jdbcType=VARCHAR}
      </if>
      <if test="staffId != null and staffId != ''" >
        and stf.staff_id=#{staffId,jdbcType=VARCHAR}
      </if>
      <if test="minCreateTime != null" >
        and stf.create_time <![CDATA[ >= ]]> #{minCreateTime,jdbcType=BIGINT}
      </if>
      <if test="maxCreateTime != null" >
        and stf.create_time <![CDATA[ <= ]]> #{maxCreateTime,jdbcType=BIGINT}
      </if>
    </trim>
    group by stf.id
    <if test="orderBy != null and orderBy != ''" >
      order by #{orderBy,jdbcType=VARCHAR}
    </if>
    <if test="page != null and size != null" >
      limit ${(page-1)*size},${size}
    </if>
  </select>
</mapper>